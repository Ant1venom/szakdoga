import json


def create_json(ss):
    """
    Creates the json file from the structure generated by the json_generation_algorithm.
    It goes through each component of the structure, adding each element to the json structure,
    then writes it to a file.
    :param ss:
    :return:
    """
    json_structure = {"feed_streams": [], "product_streams": [], "dividers": [],
                      "separators": [], "mixers": [], "connections": []}
    for fs in ss.feed_streams:
        s = {"ID": fs["id"], "comps": fs["comps"]}
        json_structure["feed_streams"].append(s)
    for ps in ss.product_streams:
        s = {"ID": ps["id"], "comps": ps["comps"]}
        json_structure["product_streams"].append(s)
    for div in ss.dividers:
        s = {"ID": div.id, "comps": div.comps, "layer": div.layer}
        json_structure["dividers"].append(s)
    for sep in ss.separators:
        s = {"ID": sep.id, "input": sep.comps, "cuts_at": sep.cuts_at, "output": sep.output, "layer": sep.layer}
        json_structure["separators"].append(s)
    for mix in ss.mixers:
        s = {"ID": mix.id, "input": mix.comps, "layer": mix.layer}
        json_structure["mixers"].append(s)
    for con in ss.connections:
        s = {"ID": con.id, "from_id": con.from_id, "to_id": con.to_id}
        json_structure["connections"].append(s)
    s = {"layers": ss.layers}
    json_structure.update(s)
    s = {"max_divs_in_single_layer": ss.max_dividers_in_single_layer}
    json_structure.update(s)

    with open("../svg_generation/generated_json.json", "w") as write:
        json.dump(json_structure, write, indent=3)
